module.exports = function(grunt) {

    var path = require('path');

    var ccCore = require('cc.core');
    var pkg = grunt.file.readJSON('package.json');

    var srcPath = 'src/';
    var tmpPath = 'tmp/';
    // 没有压缩的脚本文件
    var tmpScriptPath = path.resolve(tmpPath, 'js-packed-debug.js');

    var srcScriptPath = path.resolve(srcPath, 'script', 'main.js');
    var srcStylePath = path.resolve(srcPath, 'style');

    var distPath = path.resolve(ccCore.config.mobileAppDistPath, pkg.name);

    var tasks = ['copy:main', 'browserify', 'uglify', 'stylus'];

    grunt.initConfig({

        copy: {
            main: {
                files: [
                    // 复制html文件
                    {
                        expand: true,
                        cwd: srcPath,
                        src: ['*.html'],
                        dest: distPath
                    }
                ]
            },
            script: {
                files: [
                    // 复制js文件到debug
                    {
                        expand: true,
                        cwd: tmpScriptPath,
                        src: ['*.js'],
                        dest: distPath
                    }
                ]
            }
        },
        stylus: {
            main: {
                src: path.resolve(srcStylePath, 'main.styl'),
                dest: path.resolve(distPath, 'css-packed.css'),
                options: {
                    import: ['nib']
                }
            }
        },
        browserify: {
            main: {
                src: srcScriptPath,
                dest: path.resolve(distPath, 'js-packed.js'),
                options: {
                    external: ['normal-common', 'framework', 'mobile-common'],
                    transform: ['html2js-browserify']
                }
            }
        },
        uglify: {
            main: {
                src: path.resolve(distPath, 'js-packed.js'),
                dest: path.resolve(distPath, 'js-packed.js')
            }
        },
        watch: {
            main: {
                files: [srcPath + '/**'],
                tasks: tasks
            }
        }
    });

    grunt.loadNpmTasks('grunt-contrib-copy');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-stylus');
    grunt.loadNpmTasks('grunt-browserify');
    grunt.loadNpmTasks('grunt-contrib-uglify');

    grunt.registerTask('default', function() {
        grunt.task.run(tasks);
    });

};